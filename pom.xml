<!--
  ~ Copyright Â© 2016-2023 The Thingsboard Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  ~
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.thingsboard</groupId>
    <artifactId>thingsboard</artifactId>
    <version>3.5.0</version>
    <packaging>pom</packaging>

    <name>MSAIoTSensingPlatform</name>

    <inceptionYear>2016</inceptionYear>

    <properties>
        <main.dir>${basedir}</main.dir>
        <pkg.disabled>true</pkg.disabled>
        <pkg.name>msaiotsensingplatform</pkg.name>
        <pkg.type>java</pkg.type>
        <pkg.process-resources.phase>none</pkg.process-resources.phase>
        <pkg.package.phase>none</pkg.package.phase>
        <pkg.user>msaiotsensingplatform</pkg.user>
        <pkg.implementationTitle>${project.name}</pkg.implementationTitle>
        <pkg.unixLogFolder>/var/log/${pkg.name}</pkg.unixLogFolder>
        <pkg.installFolder>/usr/share/${pkg.name}</pkg.installFolder>
        <javax-annotation.version>1.3.2</javax-annotation.version>
        <jakarta.xml.bind-api.version>2.3.2</jakarta.xml.bind-api.version>
        <jaxb-runtime.version>2.3.2</jaxb-runtime.version>
        <spring-boot.version>2.7.10</spring-boot.version>
        <spring-data.version>2.7.10</spring-data.version>
        <spring.version>5.3.26</spring.version>
        <spring-redis.version>5.5.17</spring-redis.version>
        <spring-security.version>5.7.7</spring-security.version>
        <spring-data-redis.version>2.7.10</spring-data-redis.version>
        <jedis.version>3.8.0</jedis.version>
        <jjwt.version>0.7.0</jjwt.version>
        <slf4j.version>1.7.32</slf4j.version>
        <log4j.version>2.17.1</log4j.version>
        <logback.version>1.2.10</logback.version>
        <rat.version>0.10</rat.version>
        <cassandra.version>4.15.0</cassandra.version>
        <metrics.version>4.0.5</metrics.version>
        <cassandra-all.version>3.11.14</cassandra-all.version>
        <guava.version>31.1-jre</guava.version>
        <caffeine.version>2.6.1</caffeine.version>
        <commons-lang3.version>3.4</commons-lang3.version>
        <commons-codec.version>1.15</commons-codec.version>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-logging.version>1.2</commons-logging.version>
        <commons-csv.version>1.4</commons-csv.version>
        <apache-httpclient.version>4.5.13</apache-httpclient.version>
        <apache-httpcore.version>4.4.14</apache-httpcore.version>
        <joda-time.version>2.8.1</joda-time.version>
        <jackson.version>2.13.4</jackson.version>
        <jackson-databind.version>2.13.4.2</jackson-databind.version>
        <fasterxml-classmate.version>1.3.4</fasterxml-classmate.version>
        <auth0-jwt.version>4.2.1</auth0-jwt.version>
        <json-schema-validator.version>2.2.6</json-schema-validator.version>
        <californium.version>3.0.0</californium.version>
        <leshan.version>2.0.0-M5</leshan.version>
        <gson.version>2.9.0</gson.version>
        <freemarker.version>2.3.30</freemarker.version>
        <mail.version>1.6.2</mail.version>
        <curator.version>4.2.0</curator.version>
        <zookeeper.version>3.8.1</zookeeper.version>
        <protobuf.version>3.21.9</protobuf.version>
        <grpc.version>1.42.1</grpc.version>
        <tbel.version>1.0.6</tbel.version>
        <lombok.version>1.18.18</lombok.version>
        <paho.client.version>1.2.4</paho.client.version>
        <paho.mqttv5.client.version>1.2.5</paho.mqttv5.client.version>
        <netty.version>4.1.91.Final</netty.version>
        <netty-tcnative.version>2.0.51.Final</netty-tcnative.version>
        <os-maven-plugin.version>1.7.0</os-maven-plugin.version>
        <rabbitmq.version>4.8.0</rabbitmq.version>
        <surefire.version>3.0.0-M9</surefire.version>
        <jar-plugin.version>3.0.2</jar-plugin.version>
        <springfox-swagger.version>3.0.4</springfox-swagger.version>
        <swagger-annotations.version>1.6.3</swagger-annotations.version>
        <spatial4j.version>0.7</spatial4j.version>
        <jts.version>1.18.2</jts.version>
        <bouncycastle.version>1.69</bouncycastle.version>
        <winsw.version>2.0.1</winsw.version>
        <postgresql.driver.version>42.5.0</postgresql.driver.version>
        <sonar.exclusions>org/thingsboard/server/gen/**/*,
            org/thingsboard/server/extensions/core/plugin/telemetry/gen/**/*
        </sonar.exclusions>
        <elasticsearch.version>5.0.2</elasticsearch.version>
        <delight-nashorn-sandbox.version>0.2.1</delight-nashorn-sandbox.version>
        <kafka.version>3.2.0</kafka.version>
        <bucket4j.version>4.1.1</bucket4j.version>
        <fst.version>2.57</fst.version>
        <antlr.version>2.7.7</antlr.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <aws.sdk.version>1.11.747</aws.sdk.version>
        <pubsub.client.version>1.105.0</pubsub.client.version>
        <google.common.protos.version>2.1.0
        </google.common.protos.version> <!-- required by io.grpc:grpc-protobuf:1.38.0-->
        <azure-servicebus.version>3.2.0</azure-servicebus.version>
        <passay.version>1.5.0</passay.version>
        <ua-parser.version>1.5.4</ua-parser.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <micrometer.version>1.9.0</micrometer.version>
        <protobuf-dynamic.version>1.0.4TB</protobuf-dynamic.version>
        <wire-schema.version>3.4.0</wire-schema.version>
        <twilio.version>8.17.0</twilio.version>
        <hibernate-validator.version>6.0.20.Final</hibernate-validator.version>
        <javax.el.version>3.0.0</javax.el.version>
        <javax.validation-api.version>2.0.1.Final</javax.validation-api.version>
        <antisamy.version>1.7.2</antisamy.version>
        <snmp4j.version>2.8.5</snmp4j.version>
        <!--         TEST SCOPE         -->
        <awaitility.version>4.1.0</awaitility.version>
        <dbunit.version>2.7.2</dbunit.version>
        <java-websocket.version>1.5.2</java-websocket.version>
        <jupiter.version>5.8.2
        </jupiter.version> <!-- keep the same version as spring-boot-starter-test depend on jupiter-->
        <json-path.version>2.6.0</json-path.version>
        <mock-server.version>5.13.1</mock-server.version>
        <spring-test-dbunit.version>1.3.0</spring-test-dbunit.version> <!-- 2016 -->
        <takari-cpsuite.version>1.2.7</takari-cpsuite.version> <!-- 2015 -->
        <!--      BLACKBOX TEST SCOPE     -->
        <testng.version>7.6.1</testng.version>
        <assertj.version>3.23.1</assertj.version>
        <rest-assured.version>5.2.0</rest-assured.version>
        <hamcrest.version>1.3</hamcrest.version>
        <testcontainers.version>1.17.3</testcontainers.version>
        <zeroturnaround.version>1.12</zeroturnaround.version>
        <opensmpp.version>3.0.0</opensmpp.version>
        <jgit.version>6.1.0.202203080745-r</jgit.version>
        <exp4j.version>0.4.8</exp4j.version>
        <aerogear-otp.version>1.0.0</aerogear-otp.version>
        <selenium.version>4.6.0</selenium.version>
        <webdrivermanager.version>5.2.0</webdrivermanager.version>
        <allure-testng.version>2.21.0</allure-testng.version>
        <allure-maven.version>2.12.0</allure-maven.version>
        <slack-api.version>1.12.1</slack-api.version>
        <oshi.version>6.4.2</oshi.version>
    </properties>

    <modules>
        <module>netty-mqtt</module>
        <module>common</module>
        <module>rule-engine</module>
        <module>dao</module>
        <module>transport</module>
        <module>application</module>
        <module>msa</module>
        <module>rest-client</module>
        <module>monitoring</module>
    </modules>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- download sources under target/dependencies -->
        <!-- mvn package -Pdownload-dependencies -Dclassifier=sources dependency:copy-dependencies -->
        <profile>
            <id>download-dependencies</id>
            <properties>
                <downloadSources>true</downloadSources>
                <downloadJavadocs>true</downloadJavadocs>
            </properties>
        </profile>

        <profile>
            <id>packaging</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-resources-plugin</artifactId>
                            <version>3.2.0</version>
                            <executions>
                                <execution>
                                    <id>copy-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <excludes>
                                                    <exclude>logback.xml</exclude>
                                                    <exclude>${pkg.name}.yml</exclude>
                                                </excludes>
                                                <filtering>false</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <includes>
                                                    <include>${pkg.name}.yml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-service-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/conf</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-linux-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.linux.dist}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>config</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-linux-init</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.linux.dist}/init</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/init</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-win-conf</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}/conf</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <excludes>
                                                    <exclude>logback.xml</exclude>
                                                    <exclude>${pkg.name}.yml</exclude>
                                                </excludes>
                                                <filtering>false</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/resources</directory>
                                                <includes>
                                                    <include>${pkg.name}.yml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                            <resource>
                                                <directory>src/main/conf</directory>
                                                <excludes>
                                                    <exclude>${pkg.name}.conf</exclude>
                                                </excludes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-control</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/control</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/control</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-install</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/bin/install</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/install</directory>
                                                <includes>
                                                    <include>**/*.sh</include>
                                                    <include>**/*.xml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/unix.properties</filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-windows-control</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/windows</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-windows-install</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${pkg.win.dist}/install</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>${main.dir}/packaging/${pkg.type}/scripts/install</directory>
                                                <includes>
                                                    <include>logback.xml</include>
                                                </includes>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                        <filters>
                                            <filter>${main.dir}/packaging/${pkg.type}/filters/windows.properties
                                            </filter>
                                        </filters>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-data</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/data</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>src/main/data</directory>
                                            </resource>
                                            <resource>
                                                <directory>../dao/src/main/resources</directory>
                                                <includes>
                                                    <include>**/*.cql</include>
                                                    <include>**/*.sql</include>
                                                </includes>
                                                <filtering>false</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>copy-docker-config</id>
                                    <phase>${pkg.process-resources.phase}</phase>
                                    <goals>
                                        <goal>copy-resources</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                        <resources>
                                            <resource>
                                                <directory>docker</directory>
                                                <filtering>true</filtering>
                                            </resource>
                                        </resources>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <!-- ç¼è¯åè®®å¤´è§å®-->
                        <plugin>
                            <groupId>com.mycila</groupId>
                            <artifactId>license-maven-plugin</artifactId>
                            <version>3.0</version>
                            <configuration>
                                <header>${main.dir}/license-header-template.txt</header>
                                <properties>
                                    <owner>The Thingsboard Authors</owner>
                                </properties>
                                <excludes>
                                    <exclude>**/.env</exclude>
                                    <exclude>**/*.env</exclude>
                                    <exclude>**/.eslintrc</exclude>
                                    <exclude>**/.babelrc</exclude>
                                    <exclude>**/.jshintrc</exclude>
                                    <exclude>**/.gradle/**</exclude>
                                    <exclude>**/nightwatch</exclude>
                                    <exclude>**/README</exclude>
                                    <exclude>**/LICENSE</exclude>
                                    <exclude>**/banner.txt</exclude>
                                    <exclude>node_modules/**</exclude>
                                    <exclude>**/*.properties</exclude>
                                    <exclude>src/test/resources/**</exclude>
                                    <exclude>src/vendor/**</exclude>
                                    <exclude>src/font/**</exclude>
                                    <exclude>src/sh/**</exclude>
                                    <exclude>packaging/*/scripts/control/**</exclude>
                                    <exclude>packaging/*/scripts/windows/**</exclude>
                                    <exclude>packaging/*/scripts/init/**</exclude>
                                    <exclude>**/*.log</exclude>
                                    <exclude>**/*.current</exclude>
                                    <exclude>.instance_id</exclude>
                                    <exclude>src/main/scripts/control/**</exclude>
                                    <exclude>src/main/scripts/windows/**</exclude>
                                    <exclude>src/main/resources/public/static/rulenode/**</exclude>
                                    <exclude>**/*.proto.js</exclude>
                                    <exclude>docker/haproxy/**</exclude>
                                    <exclude>docker/tb-node/**</exclude>
                                    <exclude>ui/**</exclude>
                                    <exclude>**/.browserslistrc</exclude>
                                    <exclude>**/yarn.lock</exclude>
                                    <exclude>**/.yarnrc</exclude>
                                    <exclude>**/.angular/**</exclude>
                                    <exclude>**/*.raw</exclude>
                                    <exclude>**/*.patch</exclude>
                                    <exclude>**/apache/cassandra/io/**</exclude>
                                    <exclude>.run/**</exclude>
                                    <exclude>**/NetworkReceive.java</exclude>
                                    <exclude>**/lwm2m-registry/**</exclude>
                                </excludes>
                                <mapping>
                                    <proto>JAVADOC_STYLE</proto>
                                    <cql>DOUBLEDASHES_STYLE</cql>
                                    <scss>JAVADOC_STYLE</scss>
                                    <jsx>SLASHSTAR_STYLE</jsx>
                                    <tsx>SLASHSTAR_STYLE</tsx>
                                    <conf>SCRIPT_STYLE</conf>
                                    <gradle>JAVADOC_STYLE</gradle>
                                </mapping>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>check</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <executions>
                                <execution>
                                    <id>copy-winsw-service</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>copy</goal>
                                    </goals>
                                    <configuration>
                                        <artifactItems>
                                            <artifactItem>
                                                <groupId>com.sun.winsw</groupId>
                                                <artifactId>winsw</artifactId>
                                                <classifier>bin</classifier>
                                                <type>exe</type>
                                                <destFileName>service.exe</destFileName>
                                            </artifactItem>
                                        </artifactItems>
                                        <outputDirectory>${pkg.win.dist}</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jar-plugin</artifactId>
                            <configuration>
                                <excludes>
                                    <exclude>**/logback.xml</exclude>
                                </excludes>
                                <archive>
                                    <manifestEntries>
                                        <Implementation-Title>${pkg.implementationTitle}</Implementation-Title>
                                        <Implementation-Version>${project.version}</Implementation-Version>
                                    </manifestEntries>
                                </archive>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <skip>${pkg.disabled}</skip>
                                <mainClass>${pkg.mainClass}</mainClass>
                                <classifier>boot</classifier>
                                <layout>ZIP</layout>
                                <executable>true</executable>
                                <excludeDevtools>true</excludeDevtools>
                                <embeddedLaunchScriptProperties>
                                    <confFolder>${pkg.installFolder}/conf</confFolder>
                                    <logFolder>${pkg.unixLogFolder}</logFolder>
                                    <logFilename>${pkg.name}.out</logFilename>
                                    <initInfoProvides>${pkg.name}</initInfoProvides>
                                </embeddedLaunchScriptProperties>
                            </configuration>
                            <executions>
                                <execution>
                                    <goals>
                                        <goal>repackage</goal>
                                        <goal>build-info</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.thingsboard</groupId>
                            <artifactId>gradle-maven-plugin</artifactId>
                            <configuration>
                                <gradleProjectDirectory>${main.dir}/packaging/${pkg.type}</gradleProjectDirectory>
                                <tasks>
                                    <task>build</task>
                                    <task>buildDeb</task>
                                    <task>buildRpm</task>
                                </tasks>
                                <args>
                                    <arg>-PpackagingDir=${main.dir}/packaging</arg>
                                    <arg>-PprojectBuildDir=${basedir}/target</arg>
                                    <arg>-PprojectVersion=${project.version}</arg>
                                    <arg>
                                        -PmainJar=${project.build.directory}/${project.build.finalName}-boot.${project.packaging}
                                    </arg>
                                    <arg>-PpkgName=${pkg.name}</arg>
                                    <arg>-PpkgUser=${pkg.user}</arg>
                                    <arg>-PpkgInstallFolder=${pkg.installFolder}</arg>
                                    <arg>-PpkgCopyInstallScripts=${pkg.copyInstallScripts}</arg>
                                    <arg>-PpkgLogFolder=${pkg.unixLogFolder}</arg>
                                    <arg>--warning-mode</arg>
                                    <arg>all</arg>
                                </args>
                            </configuration>
                            <executions>
                                <execution>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>invoke</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <configuration>
                                <finalName>${pkg.name}</finalName>
                                <descriptors>
                                    <descriptor>${main.dir}/packaging/${pkg.type}/assembly/windows.xml</descriptor>
                                </descriptors>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>assembly</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-install-plugin</artifactId>
                            <configuration>
                                <file>${project.build.directory}/${pkg.name}.deb</file>
                                <artifactId>${project.artifactId}</artifactId>
                                <groupId>${project.groupId}</groupId>
                                <version>${project.version}</version>
                                <classifier>deb</classifier>
                                <packaging>deb</packaging>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>install-deb</id>
                                    <phase>${pkg.package.phase}</phase>
                                    <goals>
                                        <goal>install-file</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <release>11</release>
                        <compilerArgs>
                            <arg>-Xlint:deprecation</arg>
                            <arg>-Xlint:removal</arg>
                            <arg>-Xlint:unchecked</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.thingsboard</groupId>
                    <artifactId>gradle-maven-plugin</artifactId>
                    <version>1.0.11</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.12.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <configuration>
                        <argLine>
                            --illegal-access=permit -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=20
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-protoc</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>copy</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>com.google.protobuf</groupId>
                                        <artifactId>protoc</artifactId>
                                        <version>${protobuf.version}</version>
                                        <classifier>${os.detected.classifier}</classifier>
                                        <type>exe</type>
                                        <overWrite>true</overWrite>
                                        <outputDirectory>${project.build.directory}</outputDirectory>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>0.6.1</version>
                    <configuration>
                        <!--
                          The version of protoc must match protobuf-java. If you don't depend on
                          protobuf-java directly, you will be transitively depending on the
                          protobuf-java version that grpc depends on.
                        -->
                        <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                        </protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                        </pluginArtifact>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                                <goal>test-compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.12</version>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${basedir}/target/generated-sources</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>netty-mqtt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>version-control</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>cache</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>actor</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>dao-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>cluster-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.rule-engine</groupId>
                <artifactId>rule-engine-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.rule-engine</groupId>
                <artifactId>rule-engine-components</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>message</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>transport</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>transport-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>mqtt</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>http</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>coap</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>snmp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.transport</groupId>
                <artifactId>lwm2m</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>edge-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>queue</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>stats</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common</groupId>
                <artifactId>coap-server</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.script</groupId>
                <artifactId>script-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard.common.script</groupId>
                <artifactId>remote-js-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>rest-client</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>

            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa</groupId>-->
            <!--                <artifactId>tb-node</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa.transport</groupId>-->
            <!--                <artifactId>coap</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa.transport</groupId>-->
            <!--                <artifactId>http</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa.transport</groupId>-->
            <!--                <artifactId>mqtt</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa.transport</groupId>-->
            <!--                <artifactId>lwm2m</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <!--            <dependency>-->
            <!--                <groupId>org.thingsboard.msa.transport</groupId>-->
            <!--                <artifactId>snmp</artifactId>-->
            <!--                <version>${project.version}</version>-->
            <!--                <type>docker-info</type>-->
            <!--                <scope>test</scope>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>dao</artifactId>
                <version>${project.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>${javax-annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jakarta.xml.bind-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jaxb</groupId>
                <artifactId>jaxb-runtime</artifactId>
                <version>${jaxb-runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-client</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-oauth2-jose</artifactId>
                <version>${spring-security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-websocket</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-autoconfigure</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.vaadin.external.google</groupId>
                        <artifactId>android-json</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>${spring-data.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <version>${spring-security.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.github.springtestdbunit</groupId>
                <artifactId>spring-test-dbunit</artifactId>
                <version>${spring-test-dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
            </dependency>
            <dependency>
                <groupId>antlr</groupId>
                <artifactId>antlr</artifactId>
                <version>${antlr.version}</version>
            </dependency>
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${rabbitmq.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${mail.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path-assert</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-boringssl-static</artifactId>
                <version>${netty-tcnative.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-tcnative-classes</artifactId>
                <version>${netty-tcnative.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http2</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-mqtt</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-socks</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler-proxy</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-resolver</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency> <!-- brought by com.microsoft.azure:azure-servicebus -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
                <classifier>linux-x86_64</classifier>
            </dependency>
            <dependency> <!-- brought by com.microsoft.azure:azure-servicebus -->
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-kqueue</artifactId>
                <version>${netty.version}</version>
                <classifier>osx-x86_64</classifier>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-unix-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-core</artifactId>
                <version>${cassandra.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss</groupId>
                <artifactId>java-driver-query-builder</artifactId>
                <version>${cassandra.version}</version>
            </dependency>
            <dependency>
                <groupId>io.dropwizard.metrics</groupId>
                <artifactId>metrics-jmx</artifactId>
                <version>${metrics.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache-httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${apache-httpcore.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-parameter-names</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml</groupId>
                <artifactId>classmate</artifactId>
                <version>${fasterxml-classmate.version}</version>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${auth0-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.fge</groupId>
                <artifactId>json-schema-validator</artifactId>
                <version>${json-schema-validator.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.mail</groupId>
                        <artifactId>mailapi</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-server-cf</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-client-cf</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-server-redis</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.leshan</groupId>
                <artifactId>leshan-core</artifactId>
                <version>${leshan.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>californium-core</artifactId>
                <version>${californium.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>californium-core</artifactId>
                <version>${californium.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>element-connector</artifactId>
                <version>${californium.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.californium</groupId>
                <artifactId>scandium</artifactId>
                <version>${californium.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-to-slf4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty-shaded</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-alts</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-auth</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${grpc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>tbel</artifactId>
                <version>${tbel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.takari.junit</groupId>
                <artifactId>takari-cpsuite</artifactId>
                <version>${takari-cpsuite.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cassandra</groupId>
                <artifactId>cassandra-all</artifactId>
                <version>${cassandra-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cassandra</groupId>
                <artifactId>cassandra-thrift</artifactId>
                <version>${cassandra-all.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${jupiter.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.hamcrest</groupId>
                        <artifactId>hamcrest-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.dbunit</groupId>
                <artifactId>dbunit</artifactId>
                <version>${dbunit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.client.mqttv3</artifactId>
                <version>${paho.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.paho</groupId>
                <artifactId>org.eclipse.paho.mqttv5.client</artifactId>
                <version>${paho.mqttv5.client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>${springfox-swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>cassandra</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>jdbc</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-redis</artifactId>
                <version>${spring-data-redis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.integration</groupId>
                <artifactId>spring-integration-redis</artifactId>
                <version>${spring-redis.version}</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.winsw</groupId>
                <artifactId>winsw</artifactId>
                <version>${winsw.version}</version>
                <classifier>bin</classifier>
                <type>exe</type>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>rest</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javadelight</groupId>
                <artifactId>delight-nashorn-sandbox</artifactId>
                <version>${delight-nashorn-sandbox.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.vladimir-bukhtoyarov</groupId>
                <artifactId>bucket4j-core</artifactId>
                <version>${bucket4j.version}</version>
            </dependency>
            <dependency>
                <groupId>de.ruedigermoeller</groupId>
                <artifactId>fst</artifactId>
                <version>${fst.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.spatial4j</groupId>
                <artifactId>spatial4j</artifactId>
                <version>${spatial4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.jts</groupId>
                <artifactId>jts-core</artifactId>
                <version>${jts.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sqs</artifactId>
                <version>${aws.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-sns</artifactId>
                <version>${aws.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-pubsub</artifactId>
                <version>${pubsub.client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.api.grpc</groupId>
                <artifactId>proto-google-common-protos</artifactId>
                <version>${google.common.protos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-servicebus</artifactId>
                <version>${azure-servicebus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passay.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ua-parser</groupId>
                <artifactId>uap-java</artifactId>
                <version>${ua-parser.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.java-websocket</groupId>
                <artifactId>Java-WebSocket</artifactId>
                <version>${java-websocket.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-core</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-registry-prometheus</artifactId>
                <version>${micrometer.version}</version>
            </dependency>
            <dependency>
                <groupId>org.thingsboard</groupId>
                <artifactId>protobuf-dynamic</artifactId>
                <version>${protobuf-dynamic.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.wire</groupId>
                <artifactId>wire-schema</artifactId>
                <version>${wire-schema.version}</version>
            </dependency>
            <dependency>
                <groupId>com.twilio.sdk</groupId>
                <artifactId>twilio</artifactId>
                <version>${twilio.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-jackson</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.jsonwebtoken</groupId>
                        <artifactId>jjwt-impl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${javax.el.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${javax.validation-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.owasp.antisamy</groupId>
                <artifactId>antisamy</artifactId>
                <version>${antisamy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.snmp4j</groupId>
                <artifactId>snmp4j</artifactId>
                <version>${snmp4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-netty</artifactId>
                <version>${mock-server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mock-server</groupId>
                <artifactId>mockserver-client-java</artifactId>
                <version>${mock-server.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.opensmpp</groupId>
                <artifactId>opensmpp-core</artifactId>
                <version>${opensmpp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.aerogear</groupId>
                <artifactId>aerogear-otp-java</artifactId>
                <version>${aerogear-otp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.slack.api</groupId>
                <artifactId>slack-api-client</artifactId>
                <version>${slack-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit.ssh.apache</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <dependency>
                <groupId>net.objecthunter</groupId>
                <artifactId>exp4j</artifactId>
                <version>${exp4j.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.oshi</groupId>
                <artifactId>oshi-core</artifactId>
                <version>${oshi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>thingsboard-repo-deploy</id>
            <name>ThingsBoard Repo Deployment</name>
            <url>https://repo.thingsboard.io/artifactory/libs-release-public</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>typesafe</id>
            <name>Typesafe Repository</name>
            <url>https://repo.typesafe.com/typesafe/releases/</url>
        </repository>
        <repository>
            <id>sonatype</id>
            <url>https://oss.sonatype.org/content/groups/public</url>
        </repository>
    </repositories>
</project>
